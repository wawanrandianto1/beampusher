<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pusher Test</title>
  
  <script src="https://js.pusher.com/3.2/pusher.min.js"></script>
  
  <script>    
    // Enable pusher logging - don't include this in production
    Pusher.logToConsole = true;
    
    var supportedAuthorizers = Pusher.Runtime.getAuthorizers();

    // add our own custom authorizer that uses pre retrieved auth data
    supportedAuthorizers.preAuthenticated = function (context, socketId, callback) {
      var authData = this.authOptions.preAuth[this.channel.name];
      if (!authData) {
        callback(true, "You need to pre-authenticate" + this.channel.name);
      } else {
        callback(false, this.authOptions.preAuth[this.channel.name]);
      }
    };

    // replace the default getAuthorizers with our extended version
    Pusher.Runtime.getAuthorizers = function () {
      return supportedAuthorizers;
    };

    var pusher = new Pusher("e48e401e9da913009f95", {
      cluster: 'ap1',
      encrypted: true,
      auth: {
        preAuth: {}
      },
      // set the transport to use our custom authorizer
      authTransport: "preAuthenticated",
    });

    // retrieve the auth info for the given channel from our server
    pusher.preAuthenticate = function (channelName) {
      setTimeout(async function(){
        var obJson = {
          "socket_id" : pusher.connection.socket_id,
          "channel_name" : channelName
        }
        var convJson = JSON.stringify(obJson)
        var body = "socket_id=" + pusher.connection.socket_id + "&channel_name=" + channelName;
      
        const response = await fetch("http://localhost:3000/pusher/auth", {
          method: 'POST', // *GET, POST, PUT, DELETE, etc.
          // mode: 'no-cors', // no-cors, *cors, same-origin
          headers: { 
            "Access-Control-Allow-Origin": "*",
            'Content-Type': 'application/json' 
          },
          body: convJson // body data type must match "Content-Type" header
        });
      
        console.log("response", response);
        console.log("obJson :", obJson);
        
        const jsonResp = await response.json();
        console.log("response json", jsonResp);
        if (response.status == 200) {
          // set the auth info in the preAuth object of the auth options
          // const authBody = JSON.stringify({"auth": jsonResp});
          // pusher.config.auth.preAuthenticate[channelName] = JSON.parse(jsonResp);
          
          pusher.config.auth.preAuth[channelName] = jsonResp;
          // pusher.config.auth[channelName] = JSON.parse(jsonResp);
          
          console.log(pusher)
        }
      }, 1200)
            
      // ========================================================
      // setTimeout(function(){
      //   var body = "socket_id=" + pusher.connection.socket_id + "&channel_name=" + channelName;
      //   var request = new XMLHttpRequest();
      //   request.open("POST", "http://localhost:5000/pusher/auth", true);
      //   request.setRequestHeader("Access-Control-Allow-Origin", "*");
      //   request.setRequestHeader("Content-type", "application/json");
      //   request.onreadystatechange = function () {
      //     if (request.readyState == 4 && request.status == 200) {
      //       // set the auth info in the preAuth object of the auth options
      //       pusher.config.auth.preAuth[channelName] =
      //         JSON.parse(request.responseText);
      //     }
      //   };
      //   request.send(body);
        
      // }, 1200);
    }
      
    
    pusher.preAuthenticate("private-ch1");
  </script>
  
</head>
<body style="text-align: center;">
  
  <h1 style="margin-top: 10%;">It's Running OK</h1>
  
  <h1>Pusher Test</h1>

  <script>
    setTimeout(function() {
      pusher.subscribe("private-ch1");
    }, 3000)
  </script>
</body>
</html>